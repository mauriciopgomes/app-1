apiVersion: v1
kind: Namespace
metadata:
  name: app-1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-1
  namespace: app-1
  labels:
    app: app-1
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: app-1
  template:
    metadata:
      labels:
        app: app-1
    spec:
      containers:
      - name: app-1
        image: mauriciopgomes/app-1:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /
            port: 80
        resources:
          requests:
            cpu: "250m"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: app-1
  namespace: app-1
spec:
  selector:
    app: app-1
  ports:
    - name: http
      protocol: TCP
      port: 80
  type: ClusterIP
# ---
# apiVersion: autoscaling/v2beta2
# kind: HorizontalPodAutoscaler
# metadata:
#   name: app-1
#   namespace: app-1
# spec:
#   maxReplicas: 10
#   minReplicas: 1
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: app-1
#   metrics:
#   - type: Resource
#     resource:
#       name: cpu
#       target:
#         type: Utilization
#         averageUtilization: 50
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: app-1
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     kubernetes.io/ingress.class: "nginx"
#     cert-manager.io/cluster-issuer: letsencrypt-prod
# spec:
#   rules:
#   - host: app-1.mauriciogomes.com.br
#     http:
#       paths:
#       - backend:
#           serviceName: app-1
#           servicePort: 80
#   tls:
#   - hosts:
#     - app-1.mauriciogomes.com.br
#     secretName: app-1
